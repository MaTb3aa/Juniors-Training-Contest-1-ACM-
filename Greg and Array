#include<bits/stdc++.h>
using namespace std;




/*
  1 2 3

	(M)
	L R V
	1 2 1
	1 3 2
	2 3 4







	(K)
	L R
	1 2 	From Q1 to Q2
			Q1   1 1 0
			Q2   2 2 2
			ans1 3 3 2

	1 3     From Q1 to Q3
			Q1   1 1 0
			Q2   2 2 2
			Q3   0 4 4
			ans2 3 7 6

	2 3     From Q2 to Q3
			Q2   2 2 2
			Q3   0 4 4
			ans3 2 6 6

	ans1  3 3  2
	ans2  3 7  6
	ans3  2 6  6
	sum   8 16 14


	a =   1  2 3
		  8 16 14
	total 9 18 17


 */

 /*  Sol :
  *
  *  (K)
	 1 2  // 1 2
	 1 3  // 1 2 3
	 2 3  // 2 3

	 // 1-> 2
	 // 2-> 3
	 // 3-> 2

	 idx   1 2  3   4
	 arr   0 0  0
	  Q1   1 0 -1
	  Q2   1 0  0  -1
	  Q3   0 1  0  -1
	  sum  2 1 -1  -2
	  pre  2 3  2   0






	   lstPrefix 2 3  2
		 (M)
		 L R V    rept
		 1 2 1  *  2 = 2
		 1 3 2  *  3 = 6
		 2 3 4  *  2 = 8

		  idx 1 2 3   4
		  arr 0 0 0   0
		  Q1	 2 0 -2  0
		  Q2  6 0  0 -6
		  Q3  0 8  0 -8

		  sum 8 8 -2 -14
		  pre 8 16 14 0


  *
  *
  */
int a[100005];
long long q[100005];
long long p[100005];


int main() {
	ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int n, m, k;
	cin >> n >> m >> k;//one
	for (int i = 1; i <= n; ++i)cin >> a[i];

	vector<pair<int, int>>range(m + 1);
	vector<long long>val(m + 1);
	//two
	for (int i = 1; i <= m; i++) {
		int l, r, x;
		cin >> l >> r >> x;
		range[i] = { l,r };//make_pair(l,r)
		val[i] = x;
	}
	//three
	for (int i = 1; i <= k; i++) {
		int x, y; cin >> x >> y;
		q[x]++;
		q[y + 1]--;
	}
	//prefix
	// 2 3 2 // rept
	for (int i = 1; i <= m; i++)q[i] += q[i - 1];


	//new Val
	for (int i = 1; i <= m; i++)
		val[i] = val[i] * q[i];



	for (int i = 1; i <= m; i++) {
		int l = range[i].first;
		int r = range[i].second;

		p[l] += (val[i]);
		p[r + 1] -= (val[i]);

	}

	for (int i = 1; i <= n; i++)p[i] += p[i - 1];
	for (int i = 1; i <= n; i++)cout << p[i] + a[i] << " ";



}
